using System;
using System.Collections.Generic;
using System.Linq;

namespace ConsoleApp66
{
    class Program
    {
        static void Main(string[] args)
        {

            int num = int.Parse(Console.ReadLine());
            Dictionary<string, Dictionary<string, int>> wardrobe = new Dictionary<string, Dictionary<string, int>>();

            FillWardrobe(wardrobe, num);

            string[] clothesToFind = Console.ReadLine().Split();
            string color = clothesToFind[0];
            string cloth = clothesToFind[1];
            PrintResult(wardrobe, color, cloth); 


        }

         static void PrintResult(Dictionary<string, Dictionary<string, int>> wardrobe, string color, string cloth)
        {
            foreach (KeyValuePair< string, Dictionary<string, int>> kvp in wardrobe)
            {
                Console.WriteLine($"{kvp.Key} clothes:");

                foreach (var clothing in kvp.Value)
                {
                    if (color == kvp.Key && cloth == clothing.Key )
                    {
                        Console.WriteLine($"* {clothing.Key} - {clothing.Value} (found!)");
                        continue;
                    }
                    Console.WriteLine($"* {clothing.Key} - {clothing.Value}");
                }
            }
        }

        static Dictionary<string, Dictionary<string, int>> FillWardrobe(Dictionary<string, Dictionary<string, int>> wardrobe, int num)
        {
            for (int i = 0; i < num; i++)
            {
                string[] input = Console.ReadLine().Split(" -> ").ToArray();
                string cuurColor = input[0];
                string[] clothes = input[1].Split(",");

                if (!wardrobe.ContainsKey(cuurColor))
                {
                    wardrobe.Add(cuurColor, new Dictionary<string, int>());
                }
                for (int cloth = 0; cloth < clothes.Length; cloth++)
                {

                    if (!wardrobe[cuurColor].ContainsKey(clothes[cloth]))
                    {
                        wardrobe[cuurColor].Add(clothes[cloth], 0);

                    }
                    wardrobe[cuurColor][clothes[cloth]]++;
                }

            }


            return wardrobe;
        }
    }

}
