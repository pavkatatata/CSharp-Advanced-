using ListyIterator;
using System;
using System.Linq;

namespace ListIterator
{
    public class StartUp
    {
        static void Main(string[] args)
        {
            string command = string.Empty;
            ListyIterator<string> listy = null;


            while ((command = Console.ReadLine()) != "END")
            {
                var tokens = command.Split();
                if (tokens[0] == "Create")
                {
                    listy = new ListyIterator<string>(tokens.Skip(1).ToArray());
                }

                else if (tokens[0] == "Move")
                {
                    Console.WriteLine(listy.Move());
                }
                else if (tokens[0] == "Print")
                {
                    try
                    {
                        listy.Print();
                    }
                    catch (ArgumentException ae)
                    {
                        Console.WriteLine(ae.Message);
                    
                    }

                }
                else if (tokens[0] == "HasNext")
                {
                    Console.WriteLine(listy.HastNext());
                }
            }

        }

    }


}

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace ListyIterator
{
    public class ListyIterator<T>
    {
        private List<T> colection;
        private int currIndex;

        public ListyIterator(params T[] data)
        {
            colection = new List<T>(data);
            currIndex = 0;
        }
       


        public bool HastNext() => currIndex < colection.Count - 1;

        public bool Move()
        {
            bool canMove = this.HastNext();
            if (canMove)
            {
                currIndex++;
            }
            return canMove;
        }

        public void Print()
        {
            if (colection.Count == 0)
            {
                throw new InvalidOperationException("Invalid Operation!");
            }
            Console.WriteLine($"{colection[currIndex]}");

        }

       

    }
}
